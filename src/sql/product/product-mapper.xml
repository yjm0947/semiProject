<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<!-- 도서등록 -->
	<entry key="insertProduct">
		INSERT INTO PRODUCT(PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_PUBLISHER,
                    AUTHOR,PRODUCT_PRICE,PRODUCT_SALES_RATE,PRODUCT_STOCK,PRODUCT_TEXT)
		VALUES (SEQ_PNO.NEXTVAL,?,?,?,?,?,?,?,?)
	</entry>
	
	<!-- 상품등록 -->
	<entry key="insertProductItem">
		INSERT INTO PRODUCT(PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_PUBLISHER,PRODUCT_PRICE,
							PRODUCT_SALES_RATE,PRODUCT_STOCK,PRODUCT_TEXT)
		VALUES (SEQ_PNO.NEXTVAL,?,?,?,?,?,?,?)
	</entry>
	
	<!-- 첨부파일 넣기 -->
	<entry key="insertAttachment">
		INSERT INTO ATTACHMENT(ATTACHMENT_ID,BOARD_NO,ATTACHMENT_NAME,
								ATTACHMENT_CHANGE,ATTACHMENT_PATH,FILE_LEVEL)
		VALUES (SEQ_ANO.NEXTVAL,SEQ_PNO.CURRVAL,?,?,?,?)
	</entry>
	
	<!-- 페이징 처리 한 도서리스트 -->
	<entry key="selectAttachmentList">
		SELECT *
		FROM (SELECT ROWNUM RNUM,A.*
		        FROM(SELECT PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_PUBLISHER,
		            PRODUCT_TEXT,PRODUCT_PRICE,PRODUCT_SALES_RATE,
		            AUTHOR,CREATE_DATE,ATTACHMENT_PATH||ATTACHMENT_CHANGE "TITLEIMG"
		            FROM PRODUCT
		            JOIN ATTACHMENT ON(PRODUCT_NO=BOARD_NO)
		            AND STATUS = 'Y'
		            AND FILE_LEVEL = '1'
		            AND PRODUCT_CATEGORY IN (1,2,3,4,5,6)
		            ORDER BY CREATE_DATE DESC)A)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 페이징 처리 한 도서 카테고리 리스트...a-->
	<entry key="selectAttachmentListC">
		SELECT *
		FROM (
		  SELECT ROWNUM RNUM, A.*
		  FROM (
		    SELECT P.PRODUCT_NO, P.PRODUCT_CATEGORY, P.PRODUCT_NAME, P.PRODUCT_PUBLISHER, P.PRODUCT_TEXT,
		           P.PRODUCT_PRICE, P.PRODUCT_SALES_RATE, P.AUTHOR, P.CREATE_DATE, A.ATTACHMENT_PATH||A.ATTACHMENT_CHANGE "TITLEIMG",
		           COALESCE(ROUND(R.STAR_AVG), 0) AS STAR_AVG
		    FROM PRODUCT P
		    JOIN ATTACHMENT A ON (P.PRODUCT_NO=A.BOARD_NO) AND STATUS = 'Y' AND A.FILE_LEVEL = '1'
		    LEFT JOIN (
		      SELECT PRODUCT_NO, AVG(REVIEW_STAR) AS STAR_AVG
		      FROM REVIEW
		      WHERE STATUS = 'Y'
		      GROUP BY PRODUCT_NO
		    ) R ON (P.PRODUCT_NO = R.PRODUCT_NO)
		    WHERE P.PRODUCT_CATEGORY IN (?)
		    ORDER BY P.CREATE_DATE DESC
		  ) A
		) WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 페이징 처리 한 베스트도서리스트 -->
	<entry key="selectBestAttachList">
		SELECT *
		FROM (SELECT ROWNUM RNUM,A.*
		      FROM(SELECT P.PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_PUBLISHER,
                            PRODUCT_TEXT,PRODUCT_PRICE,PRODUCT_SALES_RATE,AUTHOR,
                             P.CREATE_DATE,ATTACHMENT_PATH||ATTACHMENT_CHANGE "TITLEIMG",SUM(QUANTITY) "QUANTITY"
                    FROM P_ORDER O
                    JOIN PRODUCT P ON (O.PRODUCT_NO=P.PRODUCT_NO)
                    JOIN ATTACHMENT A ON (O.PRODUCT_NO=A.BOARD_NO)
                    WHERE FILE_LEVEL = '1'
                    AND PRODUCT_CATEGORY IN (1,2,3,4,5,6)
                    AND P.STATUS= 'Y'
                    GROUP BY P.PRODUCT_NO,PRODUCT_CATEGORY, PRODUCT_NAME, PRODUCT_PUBLISHER, PRODUCT_TEXT, PRODUCT_PRICE, 
                                PRODUCT_SALES_RATE, AUTHOR, P.CREATE_DATE, ATTACHMENT_PATH||ATTACHMENT_CHANGE)A)
                    WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 페이징 처리 한 신간도서리스트..a -->
	<entry key="selectNewAttachList">
		SELECT *
		FROM (SELECT ROWNUM RNUM,A.*
		        FROM(SELECT PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_PUBLISHER,
		            PRODUCT_TEXT,PRODUCT_PRICE,PRODUCT_SALES_RATE,
		            AUTHOR,CREATE_DATE,ATTACHMENT_PATH||ATTACHMENT_CHANGE "TITLEIMG"
		            FROM PRODUCT
		            JOIN ATTACHMENT ON(PRODUCT_NO=BOARD_NO)
		            WHERE STATUS = 'Y'
		            AND FILE_LEVEL = '1'
		            AND PRODUCT_CATEGORY IN (1,2,3,4,5,6)
                    AND TO_CHAR(create_date,'YYYY-MM-DD') BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-3),'YYYY-MM-DD') AND TO_CHAR(SYSDATE, 'YYYY-MM-DD')
		            ORDER BY CREATE_DATE DESC)A)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 페이징 처리 한 쇼핑상품리스트 -->
	<entry key="selectAttachmentListP">
		SELECT *
		FROM (SELECT ROWNUM RNUM,A.*
		        FROM(SELECT PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_PUBLISHER,
                            PRODUCT_TEXT,PRODUCT_PRICE,PRODUCT_SALES_RATE,
                            AUTHOR,CREATE_DATE,ATTACHMENT_PATH||ATTACHMENT_CHANGE "TITLEIMG"
		            FROM PRODUCT P
		            JOIN ATTACHMENT ON(PRODUCT_NO=BOARD_NO)
		            WHERE P.STATUS = 'Y'
		            AND FILE_LEVEL = '1'
		            AND PRODUCT_CATEGORY IN (7)
		            ORDER BY CREATE_DATE DESC)A)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 도서상품리스트???????? -->
	<entry key="selectItem">
		SELECT *
		FROM (SELECT ROWNUM RNUM,A.*
				FROM(SELECT PRODUCT_NO,PRODUCT_NAME,PRODUCT_PUBLISHER,
		       		   		PRODUCT_TEXT,PRODUCT_PRICE,PRODUCT_SALES_RATE,
		      	 	   		CREATE_DATE,ATTACHMENT_PATH||ATTACHMENT_CHANGE "TITLEIMG"
					FROM PRODUCT
					JOIN ATTACHMENT ON(PRODUCT_NO=BOARD_NO)
					AND STATUS = 'Y'
					AND FILE_LEVEL = '1'
					AND PRODUCT_CATEGORY = '7'
					ORDER BY CREATE_DATE DESC)A)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 도서 리스트 수 -->
	<entry key="selectListCount">
		SELECT COUNT(*) COUNT
		FROM PRODUCT
		WHERE STATUS = 'Y'
		AND PRODUCT_CATEGORY IN (1,2,3,4,5,6)
	</entry>
	
	<!-- 도서 카테고리별 리스트 수..a -->
	<entry key="selectProCListCount">
		SELECT COUNT(*) COUNT
		FROM PRODUCT
		WHERE STATUS = 'Y'
		AND PRODUCT_CATEGORY = ?
	</entry>
	
	<!-- 검색 도서 리스트 수 -->
	<entry key="searchCount">
		SELECT COUNT(*) COUNT
		FROM PRODUCT
		WHERE STATUS = 'Y'
		AND PRODUCT_NAME LIKE '%'||?||'%'
	</entry>
	
	<!-- 검색 도서 리스트 -->
	<entry key="searchBook">
		SELECT PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_PUBLISHER,
		            PRODUCT_TEXT,PRODUCT_PRICE,PRODUCT_SALES_RATE,
		            AUTHOR,CREATE_DATE,ATTACHMENT_PATH||ATTACHMENT_CHANGE "TITLEIMG"
		            FROM PRODUCT
		            JOIN ATTACHMENT ON(PRODUCT_NO=BOARD_NO)
		            where STATUS = 'Y'
		            AND FILE_LEVEL = '1'
                    AND PRODUCT_NAME LIKE '%'||?||'%'
		            ORDER BY CREATE_DATE DESC
	</entry>
	
	<!-- 상품 리스트 수 -->
	<entry key="selectProListCount">
		SELECT COUNT(*) COUNT
		FROM PRODUCT
		WHERE STATUS = 'Y'
		AND PRODUCT_CATEGORY IN (7)
	</entry>
	<!-- 신간도서 리스트 수..a -->
	<entry key="selectNewCount">
		select count(*) COUNT
		FROM PRODUCT
		WHERE STATUS = 'Y'
		AND PRODUCT_CATEGORY IN (1,2,3,4,5,6)
		AND TO_CHAR(create_date,'YYYY-MM-DD') BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-3),'YYYY-MM-DD') AND TO_CHAR(SYSDATE, 'YYYY-MM-DD')
	</entry>
	
	<!-- 상세정보 이미지 있는 상품 상세 정보(상품이미지 출력중..a) -->
	<entry key="productDetail">
		SELECT PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_PUBLISHER,PRODUCT_TEXT,PRODUCT_PRICE,
        PRODUCT_SALES_RATE,AUTHOR,ATTACHMENT_ID,ATTACHMENT_PATH||ATTACHMENT_CHANGE "TITLEIMG"
		FROM PRODUCT P
        JOIN ATTACHMENT ON(PRODUCT_NO=BOARD_NO)
		WHERE P.STATUS = 'Y'
        AND FILE_LEVEL = 1
		AND P.PRODUCT_NO = ?
	</entry>
	<!-- 상세정보 이미지의 상품 상세 이미지(상품이미지 출력중..a) -->
	<entry key="productDetail2">
		SELECT ATTACHMENT_ID,ATTACHMENT_PATH||ATTACHMENT_CHANGE "TITLEIMG"
		FROM PRODUCT P
        JOIN ATTACHMENT ON(PRODUCT_NO=BOARD_NO)
		WHERE P.STATUS = 'Y'
        AND FILE_LEVEL = 2
		AND P.PRODUCT_NO = ?
	</entry>
	<!-- 메인페이지 베스트도서 4개 -->
	<entry key="mainBestBook">
		SELECT ROWNUM RNUM,A.*
		FROM(SELECT P.PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_PUBLISHER,
       				 PRODUCT_TEXT,PRODUCT_PRICE,PRODUCT_SALES_RATE,AUTHOR,
       				 P.CREATE_DATE,ATTACHMENT_PATH||ATTACHMENT_CHANGE "TITLEIMG",SUM(QUANTITY) "QUANTITY"
			FROM P_ORDER O
			JOIN PRODUCT P ON (O.PRODUCT_NO=P.PRODUCT_NO)
			JOIN ATTACHMENT A ON (O.PRODUCT_NO=A.BOARD_NO)
			WHERE FILE_LEVEL = '1'
			AND PRODUCT_CATEGORY IN (1,2,3,4,5,6)
			AND P.STATUS= 'Y'
			GROUP BY P.PRODUCT_NO,PRODUCT_CATEGORY, PRODUCT_NAME, PRODUCT_PUBLISHER, PRODUCT_TEXT, PRODUCT_PRICE, 
			PRODUCT_SALES_RATE, AUTHOR, P.CREATE_DATE, ATTACHMENT_PATH||ATTACHMENT_CHANGE
		     ORDER BY "QUANTITY" DESC, CREATE_DATE DESC)A
	</entry>
	<!-- 메인페이지 신간 도서 리스트 4개..a -->
	<entry key="newBookList">
		SELECT *
		FROM (SELECT ROWNUM RNUM,A.*
		      FROM(SELECT PRODUCT_NO,PRODUCT_NAME,PRODUCT_PUBLISHER,
		                  PRODUCT_PRICE,PRODUCT_SALES_RATE,ATTACHMENT_PATH||ATTACHMENT_CHANGE "TITLEIMG"
		           FROM PRODUCT P
		           JOIN ATTACHMENT A ON(PRODUCT_NO=BOARD_NO)
		           WHERE P.STATUS = 'Y'
		           AND FILE_LEVEL = 1
		           AND PRODUCT_CATEGORY IN (1,2,3,4,5,6)
		           ORDER BY CREATE_DATE DESC)A)
		WHERE RNUM BETWEEN 1 AND 4
	</entry>
	<!-- 메인페이지 상품 리스트..a -->
	<entry key="newProList">
		SELECT *
		FROM (SELECT ROWNUM RNUM,A.*
		      FROM(SELECT PRODUCT_NO,PRODUCT_NAME,PRODUCT_PUBLISHER,
		                  PRODUCT_PRICE,PRODUCT_SALES_RATE,ATTACHMENT_PATH||ATTACHMENT_CHANGE "TITLEIMG"
		           FROM PRODUCT P
		           JOIN ATTACHMENT ON(PRODUCT_NO=BOARD_NO)
		           WHERE P.STATUS = 'Y'
		           AND FILE_LEVEL = 1
		           AND PRODUCT_CATEGORY = 7
		           ORDER BY CREATE_DATE DESC)A)
		WHERE RNUM BETWEEN 1 AND 4
	</entry>
	
<!-- 상품관리 조회 -->
<entry key="selectAdminProduct">
SELECT *
FROM(SELECT ROWNUM RNUM, A.*
     FROM(SELECT *
          FROM PRODUCT
          ORDER BY STATUS DESC,PRODUCT_NO DESC ) A)
WHERE RNUM BETWEEN ? AND ?
</entry>

<!-- 상품관리 상세조회 -->
<entry key="detailAdminProduct">
	SELECT *
	FROM PRODUCT
	WHERE PRODUCT_NO = ?
</entry>

<!-- 상품 상세조회 이미지 - 관리자 -->
<entry key="detailAdminPath">
	SELECT ATTACHMENT_PATH||ATTACHMENT_CHANGE PATH
	FROM ATTACHMENT
	WHERE BOARD_NO = ?
	AND FILE_LEVEL = 1
</entry>

<!-- 입고조회 리스트 -->
<entry key="selectReceiveAdmin">
	SELECT PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_STOCK,CREATE_DATE
	FROM PRODUCT
	ORDER BY PRODUCT_NO DESC
</entry>

<!-- 출고조회 리스트 -->
<entry key="selectReleaseAdmin">
        SELECT P.PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,QUANTITY,MEMBER_ID,CREATED_AT
        FROM PRODUCT P
        JOIN P_ORDER PO ON (P.PRODUCT_NO = PO.PRODUCT_NO)
        JOIN PAYMENT PAY ON (PO.ORDER_NO = PAY.ORDER_NO)
        JOIN MEMBER M ON (PO.MEMBER_NO = M.MEMBER_NO)
        ORDER BY P.PRODUCT_NO DESC
</entry>

<!-- 출고총합  -->
<entry key="relAdminProduct">
	SELECT SUM(QUANTITY) QUANTITY
	FROM P_ORDER
	WHERE PRODUCT_NO = ?
</entry>

<!-- 상품 삭제 (관리자) -->
<entry key="deleteProductAdmin">
	UPDATE PRODUCT
	SET STATUS = 'N'
	WHERE PRODUCT_NO = ?
</entry>

<!-- 입고조회 키워드 상품 번호 검색 (관리자) -->
<entry key="searchReceivePnoAdmin">
	SELECT PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_STOCK,CREATE_DATE
	FROM PRODUCT
	WHERE PRODUCT_NO = ?
</entry>

<!-- 입고조회 키워드 상품 명 검색 (관리자) -->
<entry key="searchReceivePnameAdmin">
	SELECT PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_STOCK,CREATE_DATE
	FROM PRODUCT
	WHERE PRODUCT_NAME LIKE '%'||?||'%'
</entry>

<!-- 입고조회 키워드 상품 카테고리 검색 (관리자) -->
<entry key="searchReceiveCateAdmin">
	SELECT PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_STOCK,CREATE_DATE
	FROM PRODUCT
	WHERE PRODUCT_CATEGORY = ?
</entry>

<!-- 입고조회 키워드 상품 등록일  검색 (관리자) -->
<entry key="searchReveiveCreateAdmin">
	SELECT PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,PRODUCT_STOCK,CREATE_DATE
	FROM PRODUCT
	WHERE TO_CHAR(CREATE_DATE,'YYYYMMDD') LIKE '%'||?||'%'
</entry>

<!-- 출고조회 키워드 상품 번호 검색 (관리자) -->
<entry key="searchReleasePno">
    SELECT P.PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,QUANTITY,MEMBER_ID,CREATED_AT
    FROM PRODUCT P
    JOIN P_ORDER PO ON (P.PRODUCT_NO = PO.PRODUCT_NO)
    JOIN PAYMENT PAY ON (PO.ORDER_NO = PAY.ORDER_NO)
    JOIN MEMBER M ON (PO.MEMBER_NO = M.MEMBER_NO)
    WHERE P.PRODUCT_NO = ?
</entry>

<!-- 출고조회 키워드 상품명 검색 (관리자) -->
<entry key="searchReleasePname">
    SELECT P.PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,QUANTITY,MEMBER_ID,CREATED_AT
    FROM PRODUCT P
    JOIN P_ORDER PO ON (P.PRODUCT_NO = PO.PRODUCT_NO)
    JOIN PAYMENT PAY ON (PO.ORDER_NO = PAY.ORDER_NO)
    JOIN MEMBER M ON (PO.MEMBER_NO = M.MEMBER_NO)
    WHERE P.PRODUCT_NAME LIKE '%'||?||'%'
</entry>

<!-- 출고조회 키워드 상품 카테고리 검색 (관리자) -->
<entry key="searchReleaseCate">
    SELECT P.PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,QUANTITY,MEMBER_ID,CREATED_AT
    FROM PRODUCT P
    JOIN P_ORDER PO ON (P.PRODUCT_NO = PO.PRODUCT_NO)
    JOIN PAYMENT PAY ON (PO.ORDER_NO = PAY.ORDER_NO)
    JOIN MEMBER M ON (PO.MEMBER_NO = M.MEMBER_NO)
    WHERE PRODUCT_CATEGORY = ?
</entry>

<!-- 출고조회 키워드 주문자ID 검색 (관리자) -->
<entry key="searchReleaseId">
    SELECT P.PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,QUANTITY,MEMBER_ID,CREATED_AT
    FROM PRODUCT P
    JOIN P_ORDER PO ON (P.PRODUCT_NO = PO.PRODUCT_NO)
    JOIN PAYMENT PAY ON (PO.ORDER_NO = PAY.ORDER_NO)
    JOIN MEMBER M ON (PO.MEMBER_NO = M.MEMBER_NO)
    WHERE MEMBER_ID = ?
</entry>

<!-- 출고조회 키워드 출고날짜 검색 (관리자) -->
<entry key="searchReleaseDate">
    SELECT P.PRODUCT_NO,PRODUCT_CATEGORY,PRODUCT_NAME,QUANTITY,MEMBER_ID,CREATED_AT
    FROM PRODUCT P
    JOIN P_ORDER PO ON (P.PRODUCT_NO = PO.PRODUCT_NO)
    JOIN PAYMENT PAY ON (PO.ORDER_NO = PAY.ORDER_NO)
    JOIN MEMBER M ON (PO.MEMBER_NO = M.MEMBER_NO)
    WHERE TO_CHAR(CREATED_AT,'YYYYMMDD') LIKE '%'||?||'%'
</entry>

<!-- 상품관리 키워드 상품번호 검색 (관리자) -->
<entry key="searchProductPno">
SELECT *
FROM (SELECT ROWNUM RNUM , A.*
      FROM(SELECT *
           FROM PRODUCT
           WHERE PRODUCT_NO = ?
           ORDER BY PRODUCT_NO DESC)A)
WHERE RNUM BETWEEN ? AND ?
</entry>

<!-- 상품관리 키워드 상품카테고리 검색 (관리자) -->
<entry key="searchProductCate">
SELECT *
FROM (SELECT ROWNUM RNUM , A.*
      FROM(SELECT *
           FROM PRODUCT
           WHERE PRODUCT_CATEGORY = ?
           ORDER BY PRODUCT_NO DESC)A)
WHERE RNUM BETWEEN ? AND ?
</entry>

<!-- 상품관리 키워드 상품명 검색 (관리자) -->
<entry key="searchProductPname">
SELECT *
FROM (SELECT ROWNUM RNUM , A.*
      FROM(SELECT *
           FROM PRODUCT
           WHERE PRODUCT_NAME LIKE '%'||?||'%'
           ORDER BY PRODUCT_NO DESC)A)
WHERE RNUM BETWEEN ? AND ?
</entry>

<!-- 상품관리 키워드 출판사 검색 (관리자) -->
<entry key="searchProductPub">
SELECT *
FROM (SELECT ROWNUM RNUM , A.*
      FROM(SELECT *
           FROM PRODUCT
           WHERE PRODUCT_PUBLISHER LIKE '%'||?||'%'
           ORDER BY PRODUCT_NO DESC)A)
WHERE RNUM BETWEEN ? AND ?
</entry>

<!-- 상품관리 키워드 저자 검색 (관리자) -->
<entry key="searchProductAthor">
SELECT *
FROM (SELECT ROWNUM RNUM , A.*
      FROM(SELECT *
           FROM PRODUCT
           WHERE AUTHOR LIKE ?
           ORDER BY PRODUCT_NO DESC)A)
WHERE RNUM BETWEEN ? AND ?
</entry>

<!-- 상품관리 키워드 등록일 검색 (관리자) -->
<entry key="searchProductDate">
SELECT *
FROM (SELECT ROWNUM RNUM , A.*
      FROM(SELECT *
           FROM PRODUCT
           WHERE TO_CHAR(CREATE_DATE,'YYYYMMDD') LIKE '%'||?||'%'
           ORDER BY PRODUCT_NO DESC)A)
WHERE RNUM BETWEEN ? AND ?
</entry>

<!-- 총 상품 개수 (관리자 - 페이징) -->
<entry key="selProductAdminCount">
	SELECT COUNT(*) COUNT
	FROM PRODUCT
</entry>

<!-- 상품번호 검색 수 -->
<entry key="selPnoCount">
	SELECT COUNT(*) COUNT
	FROM PRODUCT
	WHERE PRODUCT_NO = ?
</entry>

<!-- 상품카테고리 검색 수 -->
<entry key="selCateCount">
	SELECT COUNT(*) COUNT
	FROM PRODUCT
	WHERE PRODUCT_CATEGORY = ?
</entry>

<!-- 상품명 검색 수  -->
<entry key="selPnameCount">
	SELECT COUNT(*) COUNT
	FROM PRODUCT
	WHERE PRODUCT_NAME LIKE '%'||?||'%'
</entry>

<!-- 상품 출판사 검색 수 -->
<entry key="selPubCount">
	SELECT COUNT(*) COUNT
	FROM PRODUCT
	WHERE PRODUCT_PUBLISHER LIKE '%'||?||'%'
</entry>

<!-- 상품 저자 검색 수 -->
<entry key="selAthorCount">
	SELECT COUNT(*) COUNT
	FROM PRODUCT
	WHERE AUTHOR = ?
</entry>

<!-- 상품 등록일 검색 수 -->
<entry key="selDateCount">
	SELECT COUNT(*) COUNT
	FROM PRODUCT
	WHERE TO_CHAR(CREATE_DATE,'YYYYMMDD') LIKE '%'||?||'%'
</entry>

<!-- 도서 수정 -->
<entry key="updatepro">
	UPDATE PRODUCT
	SET PRODUCT_CATEGORY = ?,
	    PRODUCT_NAME = ?,
	    PRODUCT_PUBLISHER = ?,
	    AUTHOR = ?,
	    PRODUCT_PRICE = ?,
	    PRODUCT_SALES_RATE = ?,
	    PRODUCT_STOCK = ?,
	    PRODUCT_TEXT = ?
	WHERE PRODUCT_NO = ?
</entry>

<!-- 기존 파일 정보 수정하기 -->
<entry key="updateAttachment">
	UPDATE ATTACHMENT
		SET ATTACHMENT_NAME = ?
			,ATTACHMENT_CHANGE = ?
			,ATTACHMENT_PATH = ?
			,UPDATE_DATE = SYSDATE
		WHERE ATTACHMENT_ID = ?
		AND STATUS ='Y'
</entry>

<!-- 새로운 파일정보 넣기 -->
<entry key="newInsertAttachment">
	INSERT INTO ATTACHMENT(ATTACHMENT_ID
							  ,BOARD_NO
							  ,ATTACHMENT_NAME
							  ,ATTACHMENT_CHANGE
						      ,ATTACHMENT_PATH)
		VALUES (SEQ_PNO.NEXTVAL,?,?,?,?)
</entry>

</properties>